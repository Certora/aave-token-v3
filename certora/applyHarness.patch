diff -ruN .gitignore .gitignore
--- .gitignore	1970-01-01 02:00:00.000000000 +0200
+++ .gitignore	2023-06-22 20:09:19.161398598 +0300
@@ -0,0 +1,2 @@
+*
+!.gitignore
\ No newline at end of file
diff -ruN src/BaseAaveToken.sol src/BaseAaveToken.sol
--- src/BaseAaveToken.sol	2023-06-25 18:38:16.779424218 +0300
+++ src/BaseAaveToken.sol	2023-06-25 18:14:50.283889216 +0300
@@ -12,7 +12,7 @@
     uint104 balance;
     uint72 delegatedPropositionBalance;
     uint72 delegatedVotingBalance;
-    DelegationMode delegationMode;
+    uint8 delegationMode;
   }
 
   mapping(address => DelegationAwareBalance) internal _balances;
diff -ruN src/BaseDelegation.sol src/BaseDelegation.sol
--- src/BaseDelegation.sol	2023-06-25 18:38:16.779424218 +0300
+++ src/BaseDelegation.sol	2023-06-25 18:37:40.099385958 +0300
@@ -22,7 +22,7 @@
   struct DelegationState {
     uint72 delegatedPropositionBalance;
     uint72 delegatedVotingBalance;
-    DelegationMode delegationMode;
+    uint8 delegationMode;
   }
 
   mapping(address => address) internal _votingDelegatee;
@@ -262,7 +262,7 @@
     if (from != address(0)) {
       DelegationState memory fromUserState = _getDelegationState(from);
       uint256 fromBalanceAfter = fromBalanceBefore - amount;
-      if (fromUserState.delegationMode != DelegationMode.NO_DELEGATION) {
+      if (fromUserState.delegationMode != uint8(DelegationMode.NO_DELEGATION)) {
         _governancePowerTransferByType(
           fromBalanceBefore,
           fromBalanceAfter,
@@ -282,7 +282,7 @@
       DelegationState memory toUserState = _getDelegationState(to);
       uint256 toBalanceAfter = toBalanceBefore + amount;
 
-      if (toUserState.delegationMode != DelegationMode.NO_DELEGATION) {
+      if (toUserState.delegationMode != uint8(DelegationMode.NO_DELEGATION)) {
         _governancePowerTransferByType(
           toBalanceBefore,
           toBalanceAfter,
@@ -338,7 +338,7 @@
           : address(0);
     }
     return
-      userState.delegationMode >= DelegationMode.PROPOSITION_DELEGATED
+      userState.delegationMode >= uint8(DelegationMode.PROPOSITION_DELEGATED)
         ? _propositionDelegatee[delegator]
         : address(0);
   }
@@ -375,13 +375,13 @@
   ) internal pure returns (DelegationState memory) {
     if (willDelegate) {
       // Because GovernancePowerType starts from 0, we should add 1 first, then we apply bitwise OR
-      userState.delegationMode = DelegationMode(
+      userState.delegationMode = uint8 (
         uint8(userState.delegationMode) | (uint8(delegationType) + 1)
       );
     } else {
       // First bitwise NEGATION, ie was 01, after XOR with 11 will be 10,
       // then bitwise AND, which means it will keep only another delegation type if it exists
-      userState.delegationMode = DelegationMode(
+      userState.delegationMode = uint8(
         uint8(userState.delegationMode) &
           ((uint8(delegationType) + 1) ^ uint8(DelegationMode.FULL_POWER_DELEGATED))
       );
