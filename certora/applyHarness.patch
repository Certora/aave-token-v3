diff -ruN .gitignore .gitignore
--- .gitignore	1970-01-01 01:00:00
+++ .gitignore	2023-03-30 13:10:51
@@ -0,0 +1,2 @@
+*
+!.gitignore
\ No newline at end of file
diff -ruN src/BaseAaveToken.sol src/BaseAaveToken.sol
--- src/BaseAaveToken.sol	2023-03-30 14:04:36
+++ src/BaseAaveToken.sol	2023-03-30 13:46:14
@@ -12,7 +12,7 @@
     uint104 balance;
     uint72 delegatedPropositionBalance;
     uint72 delegatedVotingBalance;
-    DelegationMode delegationMode;
+    uint8 delegationMode; // refactored from enum
   }
 
   mapping(address => DelegationAwareBalance) internal _balances;
diff -ruN src/BaseDelegation.sol src/BaseDelegation.sol
--- src/BaseDelegation.sol	2023-03-30 14:04:36
+++ src/BaseDelegation.sol	2023-03-30 13:25:19
@@ -20,7 +20,7 @@
   struct DelegationState {
     uint72 delegatedPropositionBalance;
     uint72 delegatedVotingBalance;
-    DelegationMode delegationMode;
+    uint8 delegationMode; // refactored from enum
   }
 
   mapping(address => address) internal _votingDelegatee;
@@ -265,7 +265,7 @@
     if (from != address(0)) {
       DelegationState memory fromUserState = _getDelegationState(from);
       uint256 fromBalanceAfter = fromBalanceBefore - amount;
-      if (fromUserState.delegationMode != DelegationMode.NO_DELEGATION) {
+      if (fromUserState.delegationMode != uint8(DelegationMode.NO_DELEGATION)) {
         _governancePowerTransferByType(
           fromBalanceBefore,
           fromBalanceAfter,
@@ -285,7 +285,7 @@
       DelegationState memory toUserState = _getDelegationState(to);
       uint256 toBalanceAfter = toBalanceBefore + amount;
 
-      if (toUserState.delegationMode != DelegationMode.NO_DELEGATION) {
+      if (toUserState.delegationMode != uint8(DelegationMode.NO_DELEGATION)) {
         _governancePowerTransferByType(
           toBalanceBefore,
           toBalanceAfter,
@@ -341,7 +341,7 @@
           : address(0);
     }
     return
-      userState.delegationMode >= DelegationMode.PROPOSITION_DELEGATED
+      userState.delegationMode >= uint8(DelegationMode.PROPOSITION_DELEGATED)
         ? _propositionDelegatee[delegator]
         : address(0);
   }
@@ -378,16 +378,12 @@
   ) internal pure returns (DelegationState memory) {
     if (willDelegate) {
       // Because GovernancePowerType starts from 0, we should add 1 first, then we apply bitwise OR
-      userState.delegationMode = DelegationMode(
-        uint8(userState.delegationMode) | (uint8(delegationType) + 1)
-      );
+      userState.delegationMode = userState.delegationMode | (uint8(delegationType) + 1);
     } else {
       // First bitwise NEGATION, ie was 01, after XOR with 11 will be 10,
       // then bitwise AND, which means it will keep only another delegation type if it exists
-      userState.delegationMode = DelegationMode(
-        uint8(userState.delegationMode) &
-          ((uint8(delegationType) + 1) ^ uint8(DelegationMode.FULL_POWER_DELEGATED))
-      );
+      userState.delegationMode = userState.delegationMode &
+          ((uint8(delegationType) + 1) ^ uint8(DelegationMode.FULL_POWER_DELEGATED));
     }
     return userState;
   }
